// Generated by data binding compiler. Do not edit!
package com.ekoapp.ekosdk.uikit.community.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Group;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.ekoapp.ekosdk.uikit.common.views.text.EkoExpandableTextView;
import com.ekoapp.ekosdk.uikit.community.R;
import com.google.android.material.checkbox.MaterialCheckBox;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class AmityItemCommentNewsFeedBinding extends ViewDataBinding {
  @NonNull
  public final Group actionGroup;

  @NonNull
  public final ImageButton btnCommentAction;

  @NonNull
  public final MaterialCheckBox cbLike;

  @NonNull
  public final ShapeableImageView ivAvatar;

  @NonNull
  public final TextView reply;

  @NonNull
  public final TextView tvCommentTime;

  @NonNull
  public final TextView tvEdited;

  @NonNull
  public final EkoExpandableTextView tvPostComment;

  @NonNull
  public final TextView tvUserName;

  @NonNull
  public final TextView tvViewReplies;

  @NonNull
  public final LinearLayout viewRepliesContainer;

  @Bindable
  protected Boolean mReadOnly;

  @Bindable
  protected Boolean mAddBottomSpace;

  @Bindable
  protected Boolean mEdited;

  @Bindable
  protected String mAvatarUrl;

  @Bindable
  protected Boolean mShowViewRepliesButton;

  @Bindable
  protected Boolean mIsReplyComment;

  protected AmityItemCommentNewsFeedBinding(Object _bindingComponent, View _root,
      int _localFieldCount, Group actionGroup, ImageButton btnCommentAction,
      MaterialCheckBox cbLike, ShapeableImageView ivAvatar, TextView reply, TextView tvCommentTime,
      TextView tvEdited, EkoExpandableTextView tvPostComment, TextView tvUserName,
      TextView tvViewReplies, LinearLayout viewRepliesContainer) {
    super(_bindingComponent, _root, _localFieldCount);
    this.actionGroup = actionGroup;
    this.btnCommentAction = btnCommentAction;
    this.cbLike = cbLike;
    this.ivAvatar = ivAvatar;
    this.reply = reply;
    this.tvCommentTime = tvCommentTime;
    this.tvEdited = tvEdited;
    this.tvPostComment = tvPostComment;
    this.tvUserName = tvUserName;
    this.tvViewReplies = tvViewReplies;
    this.viewRepliesContainer = viewRepliesContainer;
  }

  public abstract void setReadOnly(@Nullable Boolean readOnly);

  @Nullable
  public Boolean getReadOnly() {
    return mReadOnly;
  }

  public abstract void setAddBottomSpace(@Nullable Boolean addBottomSpace);

  @Nullable
  public Boolean getAddBottomSpace() {
    return mAddBottomSpace;
  }

  public abstract void setEdited(@Nullable Boolean edited);

  @Nullable
  public Boolean getEdited() {
    return mEdited;
  }

  public abstract void setAvatarUrl(@Nullable String avatarUrl);

  @Nullable
  public String getAvatarUrl() {
    return mAvatarUrl;
  }

  public abstract void setShowViewRepliesButton(@Nullable Boolean showViewRepliesButton);

  @Nullable
  public Boolean getShowViewRepliesButton() {
    return mShowViewRepliesButton;
  }

  public abstract void setIsReplyComment(@Nullable Boolean isReplyComment);

  @Nullable
  public Boolean getIsReplyComment() {
    return mIsReplyComment;
  }

  @NonNull
  public static AmityItemCommentNewsFeedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.amity_item_comment_news_feed, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static AmityItemCommentNewsFeedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<AmityItemCommentNewsFeedBinding>inflateInternal(inflater, R.layout.amity_item_comment_news_feed, root, attachToRoot, component);
  }

  @NonNull
  public static AmityItemCommentNewsFeedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.amity_item_comment_news_feed, null, false, component)
   */
  @NonNull
  @Deprecated
  public static AmityItemCommentNewsFeedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<AmityItemCommentNewsFeedBinding>inflateInternal(inflater, R.layout.amity_item_comment_news_feed, null, false, component);
  }

  public static AmityItemCommentNewsFeedBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static AmityItemCommentNewsFeedBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (AmityItemCommentNewsFeedBinding)bind(component, view, R.layout.amity_item_comment_news_feed);
  }
}
